magentadesk - Get MariaDB Table Difference, And Reflect.
version 0.2.7

Usage:

    echo '${json}' \
      | [MD_ENV=${mdEnv}] [MD_OUTPUT=${mdOutput}] [MD_LIMIT_LENGTH=${mdLimitLength}] [MD_HOME=${mdHome}] \
        java -jar magentadesk.jar --mode=${mode} [--logPath=${logPath}] [--addSeconds=${addSeconds}]

(args)

  mode        (required) diff, sync or maintenance
  logPath     optionally, log to file. if 'stdout', log to stdout. if 'stderr', log to stderr.
  addSeconds  optionally, modify log time. if '0', it's equal to locale en. default locale ja.

(env)

  mdEnv         if 'DEBUG', log in detail.
  mdOutput      if 'PRETTY', output json is pretty.
  mdLimitLength when diff and over this, returned value is to hash. default is 1000.
  mdHome        default is '${HOME}/.magentadesk'.

(stdin)

  mode=diff

    {
      // (required) connect host
      "host":"127.0.0.1",
      // (required) connect port
      "port":13306,
      // (required) connect user, need 'base' database, 'compare' database, and 'magentadesk' database privileges
      // when connecting, use information_schema
      "user":"root",
      // (required) connect password
      "pass":"pass",
      // (required) connect charset, 'utf8', 'utf8mb3' or 'utf8mb4' is allowed
      "charset":"utf8mb4",
      // (required) base database
      "baseDatabase":"base",
      // (required) compare database
      "compareDatabase":"compare",
      // optionally
      "option":{
        // list. default is '%'. OR condition.
        "includeTableLikePatterns": [
          "m\\_*"
        ],
        // list. default is ''. AND condition.
        "excludeTableLikePatterns": [
          "m\\_admin\\_%"
        ],
        // if true, ignore table structure diff. default is false.
        "ignoreAutoIncrement": false,
        // if true, ignore table structure diff. default is false.
        "ignoreComment": false,
        // if true, ignore table structure diff. default is false.
        "ignorePartitions": false,
        // if true, ignore table structure diff. default is false.
        "ignoreDefaultForSequence": false
      },
      // conditions
      "conditions": [
        {
          // if setting tableName is matched, expresion is used by 'where' condition.
          // if setting tableName is matched, 'checksum table' query is passed and replaced a fake value.
          "tableName":"t1",
          "expression":"upd_date > (now() - interval 10 day)"
        }
      ]
    }

  mode=sync

    {
      // (required) connect host
      "host":"127.0.0.1",
      // (required) connect port
      "port":13306,
      // (required) connect user, need 'base' database, 'compare' database, and 'magentadesk' database privileges
      // when connecting, use information_schema
      "user":"root",
      // (required) connect password
      "pass":"pass",
      // (required) connect charset, 'utf8', 'utf8mb3' or 'utf8mb4' is allowed
      "charset":"utf8mb4",
      // (required) diff result id
      "summaryId":"XXXXX",
      // optionally, if listed, selected diffSeqs are only reflected.
      "diffSeqs": [],
      // optionally, if 'true', execute sync, 'false' is dryrun. default is false.
      "run": false,
      // optionally, if 'true', not exists in base, but exists in compare, force to delete from compare. default is false.
      "force": false,
      // optionally, if 'true', delete only summary id records in complete execution, 'false' is delete base and compare concerned records. default is false.
      "loose": false,
      // optionally, execute commands just before commit.
      "commandsBeforeCommit": [
        {
          // (required) command
          "command": "XXX",
          // default is 30.
          "timeout": 10,
          // default is [0]. if not contains command result code, rollback happens.
          "successCodeList": [0, 23]
        }
      ],
      // optionally, execute commands just after commit.
      "commandsAfterCommit": [
        {
          // (required) command
          "command": "XXX",
          // default is 30.
          "timeout": 10
        }
      ],
      // optionally, execute http callback just before commit.
      "httpCallbackBeforeCommit": [
        {
          // (required) callback url
          "url": "http://localhost:9000/before.php",
          // default is 30.
          "timeout": 10,
          // default is [200]. if not contains http status code, rollback happens.
          "successStatusList": [200, 201]
        }
      ],
      // optionally, execute http callback just after commit.
      "httpCallbackAfterCommit": [
        {
          // (required) callback url
          "url": "http://localhost:9000/after.php",
          // default is 30.
          "timeout": 10
        }
      ]
    }

  mode=maintenance

    {
      // (required) connect host
      "host":"127.0.0.1",
      // (required) connect port
      "port":13306,
      // (required) connect user, need 'base' database, 'compare' database, and 'magentadesk' database privileges
      // when connecting, use information_schema
      "user":"root",
      // (required) connect password
      "pass":"pass",
      // (required) connect charset, 'utf8', 'utf8mb3' or 'utf8mb4' is allowed
      "charset":"utf8mb4",
      // (required) base database
      "baseDatabase":"base",
      // (required) compare database
      "compareDatabase":"compare",
      // (required) maintenance state, if true, in maintenance concerned base with compare
      "maintenance":"(on|off)"
    }

(stdout)

  mode=diff

    {
      "existsOnlyBaseTables": [
        {
          "tableName": "t1",
          "tableComment": "",
          "baseDefinition": "CREATE ..."
        }
      ],
      "existsOnlyCompareTables": [
        {
          "tableName": "t1",
          "tableComment": "",
          "compareDefinition": "CREATE ..."
        }
      ],
      "forceExcludeTables": [
        {
          "tableName": "t1",
          "tableComment": "",
          "definition": "CREATE ...",
          "reason": "(referencedForeignKey|isView|isSequence|notInnoDB|mismatchTrigger)"
        }
      ],
      "incorrectDefinitionTables": [
        {
          "tableName": "t1",
          "tableComment": "",
          "definition": "CREATE ...",
          "reason": "(noPrimaryKey|hasForeignKey|invalidCharset)"
        }
      ],
      "mismatchDefinitionTables": [
        {
          "tableName": "t1",
          "tableComment": "",
          "baseDefinition": "CREATE ...",
          "compareDefinition": "CREATE ..."
        }
      ],
      "mismatchRecordTables": [
        {
          "tableName": "t1",
          "tableComment": "",
          "columns": [
            {
              "columnName": "",
              "columnType": "",
              "columnCollation": "",
              "columnComment": "",
              "isPrimary": (true|false),
            }
          ],
          "records": [
            {
              "diffSeq": XXX,
              "baseValues": [],
              "compareValues": []
            }
          ]
        }
      ],
      "matchTables": [
        {
          "tableName": "t1",
          "tableComment": "",
          "baseTableType": "",
          "compareTableType": "",
          "baseChecksum": "",
          "compareChecksum": ""
        }
      ],
      "summaryId": "XXXXX"
    }

  mode=sync

    {
      "reflectedRecordTables": [
        {
          "tableName": "t1",
          "tableComment": "",
          "columns": [
            {
              "columnName": "",
              "columnType": "",
              "columnCollation": "",
              "columnComment": "",
              "isPrimary": (true|false),
            }
          ],
          "records": [
            {
              "diffSeq": XXX,
              "values": [],
              "changes": []
            }
          ]
        }
      ],
      "notReflectedRecordTables": [
        {
          "tableName": "t1",
          "tableComment": "",
          "columns": [
            {
              "columnName": "",
              "columnType": "",
              "columnCollation": "",
              "columnComment": "",
              "isPrimary": (true|false),
            }
          ],
          "records": [
            {
              "diffSeq": XXX,
              "baseValues": [],
              "compareValues": []
            }
          ]
        }
      ],
      "commandResultsBeforeCommit": [
        {
          "command": "XXX",
          "code": XXX,
          "output": "XXX"
        }
      ],
      "commandResultsAfterCommit": [
        {
          "command": "XXX",
          "code": XXX,
          "output": "XXX"
        }
      ],
      "httpResultsBeforeCommit": [
        {
          "status": 200,
          "body": ""
        }
      ],
      "httpResultsAfterCommit": [
        {
          "status": 200,
          "body": ""
        }
      ],
      "summaryId": "XXXXX"
    }

    (called command in commandsBeforeCommit or commandsAfterCommit)

      (stdin)

        {
          // when mode=sync, input run value.
          "run": false,
          // when mode=sync, output reflectedRecordTables value written in file.
          "reflectedJsonPath": "${mdHome}/reflected_${summaryId}.json"
        }

    (called http callback in httpCallbackBeforeCommit or httpCallbackAfterCommit)

      (request)

        {
          // when mode=sync, input run value.
          "run": false,
          // when mode=sync, output reflectedRecordTables value.
          "reflectedRecordTables": []
        }

    * request method is 'POST'.
    * request content type is 'application/json'.

  mode=maintenance

    {
      // maintenance result
      "maintenance":"(on|off)"
    }

(exit code)

  0:  success
  1:  error
  11: invalid args
  12: invalid stdin
  13: invalid input
  14: invalid version
  21: disallow simultaneous execution
  22: in maintenance
  23: no exists base or compare
  24: no exists diff seqs
  31: not success code
  32: not success status
  99: unknown
